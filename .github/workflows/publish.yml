name: Publish Storybook and Docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  prepare-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install 🔧
        run: |
          npm install
      
      - name: "Generate Coverage Report"
        run: |
          npm run test
  
      - name: "Upload Coverage Report"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          
      - name: Build Docs 🔧
        run: |
          npm run build-docs

      - name: "Upload Docs"
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs

      - name: Build Storybook 🔧
        run: |
          npm run build-storybook

      - name: "Upload Storybook"
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: storybook-static

      - name: Download all Artifacts 🚀
        if: always()
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: _site

      - name: Add Home Page to artifacts 🚀
        if: always()
        run: |
          cp -r tools/gh-pages/* _site/
          ls -la _site/

      - name: "Upload Final Site"
        uses: actions/upload-artifact@v4
        with:
            name: _site
            path: _site

  publish:
    needs: prepare-content
    
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Download Site
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
